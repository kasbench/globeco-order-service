spring.application.name=globeco-order-service
server.port=8081

spring.application.name=globeco-order-service
spring.datasource.url=jdbc:postgresql://globeco-order-service-postgresql:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver
spring.flyway.enabled=true

# Actuator health endpoints for Kubernetes probes
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# External Service Configuration
external.services.security.url=http://globeco-security-service:8000
external.services.security.timeout=5000
external.services.portfolio.url=http://globeco-portfolio-service:8000
external.services.portfolio.timeout=5000

# Caffeine Cache Configuration
cache.security.ttl=300000
cache.security.max-size=10000
cache.portfolio.ttl=300000
cache.portfolio.max-size=10000

# Cache Statistics and Monitoring
cache.statistics.enabled=true
management.metrics.cache.instrument-cache=true

# Logging Configuration - Can be overridden by LOG_LEVEL environment variable
logging.level.root=${LOG_LEVEL:INFO}
logging.level.org.kasbench.globeco_order_service=${LOG_LEVEL:INFO}

# OpenTelemetry OTLP Metrics Export
management.otlp.metrics.export.url=http://otel-collector-collector.monitoring.svc.cluster.local:4318/v1/metrics
management.otlp.metrics.export.step=1m
management.otlp.metrics.export.resource-attributes.service.name=globeco-order-service
management.otlp.metrics.export.resource-attributes.service.version=1.0.0
management.otlp.metrics.export.resource-attributes.service.namespace=globeco
management.otlp.metrics.export.resource-attributes.service.instance.version=1.0.0
management.otlp.metrics.export.resource-attributes.service.instance.namespace=globeco

# OpenTelemetry OTLP Tracing Export
management.otlp.tracing.endpoint=http://otel-collector-collector.monitoring.svc.cluster.local:4318/v1/traces
management.otlp.tracing.resource-attributes.service.name=globeco-order-service
management.otlp.tracing.resource-attributes.service.version=1.0.0
management.otlp.tracing.resource-attributes.service.namespace=globeco
management.otlp.tracing.resource-attributes.service.instance.namespace=globeco
management.otlp.tracing.sampling.probability=1.0

# OTLP Exporter Logging (for debugging)
logging.level.io.micrometer.registry.otlp=DEBUG
logging.level.io.opentelemetry.exporter.otlp=DEBUG

# Custom Metrics Configuration
metrics.custom.enabled=true
metrics.database.enabled=true
metrics.http.enabled=true
metrics.initialization.timeout=30

# HikariCP Configuration for Metrics
spring.datasource.hikari.register-mbeans=true
spring.datasource.hikari.allow-pool-suspension=false
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
